# Generated by Django 5.0.1 on 2024-01-10 22:24

import django.core.validators
import django.db.models.deletion
import g_classe.models
from django.db import migrations, models


def populate_classe(apps, schema_editor):
    data = [
        {'classe': 'Cours Préparatoire Première Année', 'dimunitif': 'CP1', 'cours': 1},
        {'classe': 'Cours Préparatoire Deuxième Année', 'dimunitif': 'CP2', 'cours': 1},
        {'classe': 'Cours Elémentaire Première Année', 'dimunitif': 'CE1', 'cours': 2},
        {'classe': 'Cours Elémentaire Deuxième Année', 'dimunitif': 'CE2', 'cours': 2},
        {'classe': 'Cours Moyen Première Année', 'dimunitif': 'CM1', 'cours': 3},
        {'classe': 'Cours Moyen Deuxième Année', 'dimunitif': 'CM2', 'cours': 3},
    ]
    Model = apps.get_model('g_classe', 'Classe')
    for item in data:
        obj = Model(classe=item['classe'], dimunitif=item['dimunitif'], cours=item['cours'])
        obj.save()

def populate_config(apps, schema_editor):
    item = {'annee_scolaire': '', 'start': 1990, 'end': 2000, 'ecole': '', 'classe': None, 'status': ''}
    Model = apps.get_model('g_classe', 'Annee_Scolaire')
    obj = Model(annee_scolaire=item['annee_scolaire'], start=item['start'], end=item['end'], ecole=item['ecole'], classe=item['classe'], status=item['status'])
    obj.save()

def populate_matiere(apps, schema_editor):
    data = [
  {
    "matiere": "Lecture",
    "coefficient": 1,
    "cours": 3
  },
  {
    "matiere": "Dictée",
    "coefficient": 1,
    "cours": 3
  },
  {
    "matiere": "Rédaction",
    "coefficient": 1,
    "cours": 3
  },
  {
    "matiere": "Dessin",
    "coefficient": 1,
    "cours": 3
  },
  {
    "matiere": "Présentation",
    "coefficient": 1,
    "cours": 3
  },
  {
    "matiere": "Récitation / Chant",
    "coefficient": 1,
    "cours": 3
  },
  {
    "matiere": "Etude de text",
    "coefficient": 2,
    "cours": 3
  },
  {
    "matiere": "Histoire",
    "coefficient": 1,
    "cours": 3
  },
  {
    "matiere": "Géographie",
    "coefficient": 1,
    "cours": 3
  },
  {
    "matiere": "Science",
    "coefficient": 2,
    "cours": 3
  },
  {
    "matiere": "Opérations",
    "coefficient": 2,
    "cours": 3
  },
  {
    "matiere": "Problème",
    "coefficient": 1,
    "cours": 3
  },
  {
    "matiere": "Education sportive",
    "coefficient": 2,
    "cours": 3
  },

  {
    "matiere": "Lecture",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Dictée",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Observation",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Histoire",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Géographie",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Grammaire",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Vocabulaire",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Conjugaison",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Opérations",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Problème",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Récitation/Chant",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Orthographe",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Lecture",
    "coefficient": 1,
    "cours": 2
  },
  {
    "matiere": "Expression écrite",
    "coefficient": 1,
    "cours": 2
  },

  {
    "matiere": "Lecture",
    "coefficient": 1,
    "cours": 1
  },
  {
    "matiere": "Calcul",
    "coefficient": 1,
    "cours": 1
  },
  {
    "matiere": "Dictée",
    "coefficient": 1,
    "cours": 1
  },
  {
    "matiere": "Ecriture",
    "coefficient": 1,
    "cours": 1
  },
  {
    "matiere": "Copie",
    "coefficient": 1,
    "cours": 1
  },
  {
    "matiere": "Dessin",
    "coefficient": 1,
    "cours": 1
  },
  {
    "matiere": "Observation",
    "coefficient": 1,
    "cours": 1
  },
  {
    "matiere": "Expression orale",
    "coefficient": 1,
    "cours": 1
  },
  {
    "matiere": "Récitation/Chant",
    "coefficient": 1,
    "cours": 1
  }
]
    Model = apps.get_model('g_classe', 'Matiere')
    for item in data:
        obj = Model(matiere=item['matiere'], coefficient=item['coefficient'], cours=item['cours'])
        obj.save()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classe', models.CharField(max_length=60)),
                ('dimunitif', models.CharField(max_length=10)),
                ('cours', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matiere', models.CharField(max_length=25)),
                ('coefficient', models.IntegerField()),
                ('cours', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Studient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=60)),
                ('prenom', models.CharField(max_length=60)),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=10)),
                ('naissance', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Annee_Scolaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee_scolaire', models.CharField(blank=True, max_length=30, null=True)),
                ('start', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2020), g_classe.models.max_value_current_year], verbose_name='year')),
                ('end', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2020), g_classe.models.max_value_current_year], verbose_name='year')),
                ('status', models.CharField(blank=True, choices=[('Actif', 'Actif'), ('#', '#')], default='#', max_length=10, null=True)),
                ('ecole', models.CharField(blank=True, max_length=255, null=True)),
                ('classe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='g_classe.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.IntegerField()),
                ('keyNote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note', to='g_classe.note')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='g_classe.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='StudientOfYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PRE', 'Présent(e)'), ('ABS', 'Absent(e)'), ('ABA', 'Abandon')], default='PRE', max_length=20)),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='g_classe.annee_scolaire')),
                ('studient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='g_classe.studient')),
            ],
        ),
        migrations.AddField(
            model_name='note',
            name='studient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='g_classe.studientofyear'),
        ),
        migrations.CreateModel(
            name='Trimestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trimestre', models.CharField(max_length=60)),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='g_classe.annee_scolaire')),
            ],
        ),
        migrations.AddField(
            model_name='note',
            name='trimestre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='g_classe.trimestre'),
        ),
        migrations.RunPython(populate_classe),
        migrations.RunPython(populate_matiere),
        migrations.RunPython(populate_config),
    ]
